[
  {
    "name": "GTFS",
    "url": "https://developers.google.com/transit/gtfs/",
    "description": "A GTFS feed is a group of text files that contains infrequently changing transit data, like stops, routes, trips, and other schedule data. Transit agencies typically update their GTFS feed every few months."
  },
  {
    "name": "GTFS Realtime",
    "url": "https://developers.google.com/transit/gtfs-realtime/",
    "description": "GTFS Realtime consists of three binary files that contain realtime vehicle positions, realtime arrival information, and service alerts. Transit agencies typically update these files every minute."
  },
  {
    "name": "OpenMobilityData (former TransitFeeds)",
    "url": "https://openmobilitydata.org/",
    "description": "List of GTFS/GTFS-realtime data feeds from around the world. If you're trying to get realtime data for some agency, this is a good place to start."
  },
  {
    "name": "World Bank",
    "url": "https://olc.worldbank.org/content/introduction-general-transit-feed-specification-gtfs-and-informal-transit-system-mapping",
    "description": "\"Intro. to GTFS\" online course - A free, online, self-paced course for learning about GTFS and GTFS-realtime."
  },
  {
    "name": "Open Transit Data Toolkit",
    "url": "http://transitdatatoolkit.com/",
    "description": "A series of lessons to help people utilize open transit data."
  },
  {
    "name": "MBTA GTFS Onboarding",
    "url": "https://mybinder.org/v2/gh/mbta/gtfs_onboarding/main?urlpath=lab/tree/GTFS_Onboarding.ipynb",
    "description": "An interactive tutorial created by MBTA for GTFS static. A stand-alone Docker image is available on GitHub as well as a hosted/no-install version of the Jupyter notebook."
  },
  {
    "name": "TransitWiki",
    "url": "http://transitwiki.org",
    "description": "A community wiki for transit planners. Like this repo, but better."
  },
  {
    "name": "MobilityData Slack chat",
    "url": "https://mobilitydata-io.herokuapp.com/"
  },
  {
    "name": "Transit Developers mailing list",
    "url": "https://groups.google.com/forum/#!forum/transit-developers"
  },
  {
    "name": "OneBusAway User mailing list",
    "url": "http://groups.google.com/group/onebusaway-users"
  },
  {
    "name": "OneBusAway Developers mailing list",
    "url": "http://groups.google.com/group/onebusaway-developers"
  },
  {
    "name": "OneBusAway API mailing list",
    "url": "http://groups.google.com/group/onebusaway-api"
  },
  {
    "name": "OneBusAway Slack chat",
    "url": "https://onebusaway.herokuapp.com/"
  },
  {
    "name": "Transit Techies NYC",
    "url": "https://transittechies.nyc/",
    "description": "NYC-based meetup for those interested in this repo. Speaker list includes many contributors to this repo."
  },
  {
    "name": "Transitland",
    "url": "https://transit.land/",
    "description": "Community editable list of many transit agency GTFS datasets. Also provides an API to access the data as JSON/GeoJSON and a playground to try out the data."
  },
  {
    "name": "OpenMobilityData",
    "url": "https://openmobilitydata.org/",
    "description": "List of GTFS and GTFS-RT feeds. Archives and validates the GTFS feeds and allows you to preview both GTFS and GTFS-RT through the browser."
  },
  {
    "name": "GTFS Data Exchange (Deprecated)",
    "url": "http://www.gtfs-data-exchange.com/agencies",
    "description": "Formerly the definitive directory of GTFS feed URLs. Shutdown in 2016. But 93 GB of data from 2008 to 2016 is available upon request."
  },
  {
    "name": "CapMetrics",
    "url": "https://github.com/scascketta/CapMetrics",
    "description": "Historical vehicle locations for Austin's transit agency (CapMetro). Data is collected by capmetricsd, a Go daemon."
  },
  {
    "name": "National Transit Database (USA)",
    "url": "https://www.transit.dot.gov/ntd",
    "description": "Information and statistics on the transit systems of the United States, run by the Federal Transit Administration."
  },
  {
    "name": "Transport (France)",
    "url": "https://transport.data.gouv.fr/",
    "description": "GTFS datasets for French transit systems."
  },
  {
    "name": "European long-distance transport operators (EU) (Unofficial)",
    "url": "https://github.com/public-transport/european-transport-operators",
    "description": "Unofficial list of available API endpoints, GTFS feeds and client libraries"
  },
  {
    "name": "Transport API",
    "url": "https://www.transportapi.com/",
    "description": "REST API for aggregated transit data for the United Kingdom.  Fee-based access."
  },
  {
    "name": "TransLoc OpenAPI",
    "url": "https://market.mashape.com/transloc/openapi-1-2",
    "description": "REST API for real-time vehicle, route, stop, and arrival data for over 60 transit systems in the United States that have purchased TransLoc's AVL hardware and software."
  },
  {
    "name": "NextBus API",
    "url": "http://www.nextbus.com/xmlFeedDocs/NextBusXMLFeed.pdf",
    "description": "REST API for real-time vehicle, route, stop, and arrival data for agencies that have puchased NextBus's hardware and/or software."
  },
  {
    "name": "Navitia.io",
    "url": "http://www.navitia.io/",
    "description": "REST API for journey planning, stop schedules, isocrhons and lot more on US and EU. Navitia is the opensource engine behind the live API."
  },
  {
    "name": "CityBikes",
    "url": "http://api.citybik.es",
    "description": "REST API for aggregated bikeshare data from around the world. Powered by pyBikes."
  },
  {
    "name": "HAFAS – Propriety public transport management software by HaCon (list of endpoints)",
    "url": "https://de.wikipedia.org/wiki/HAFAS"
  },
  {
    "name": "Citylines.co",
    "url": "https://www.citylines.co",
    "description": "A collaborative platform for mapping transit systems, with an emphasis on their historical evolution. The data can be downloaded as GeoJSON or CSV from citylines.co/data."
  },
  {
    "name": "OpenStreetMap (OSM)",
    "url": "https://www.openstreetmap.org",
    "description": "The collaborative platform for mapping the world, including transport, transit, and routing data."
  },
  {
    "name": "GTFS-Hub",
    "url": "https://github.com/mfdz/gtfs-hub",
    "description": "Community tested, probably quality/content enhanced, partially merged or filtered GTFS-feeds of (currently German) transport agencies. Maintained by MITFAHR|DE|ZENTRALE."
  },
  {
    "name": "OneBusAway",
    "url": "http://onebusaway.org/",
    "description": "A Java app that consumes GTFS and GTFS-Realtime (along with other formats) and turns them into an easy to use REST API."
  },
  {
    "name": "OpenTripPlanner",
    "url": "http://www.opentripplanner.org/",
    "description": "An open source platform for multi-modal and multi-agency journey planning, as well as returning information about a multi-modal graph (using data sources such as GTFS and OpenStreetMap)."
  },
  {
    "name": "TransitClock",
    "url": "http://thetransitclock.org",
    "description": "Java application that can consume raw vehicle positions and generate prediction times in formats such as GTFS-realtime.  Formerly known as \"Transitime\"."
  },
  {
    "name": "Linked Connections",
    "url": "http://linkedconnections.org/",
    "description": "An open-source, scalable intermodal route planning engine, which allows clients to execute the route planning algorithm (as opposed to the server). Uses GTFS data."
  },
  {
    "name": "TransiCast",
    "url": "http://www.transicast.com/",
    "description": "Provides public transportation data for North America in a single, integrated call and response format. The data is provided in stream-parsable XML and JSON formats.  Open-source on Google Code.  Hosted version at www.transitcast.com requires payment."
  },
  {
    "name": "gtfs-server",
    "url": "https://github.com/denysvitali/gtfs-server",
    "description": "A web server, written in Rust that uses PostGIS as a backend to serve GTFS data via a HTTP endpoint"
  },
  {
    "name": "Navitia is the opensource engine behind the Navitia.io live API.",
    "url": "https://github.com/CanalTP/navitia"
  },
  {
    "name": "pyBikes",
    "url": "https://github.com/eskerda/pybikes",
    "description": "Software powering CityBikes for worldwide bikeshare system info"
  },
  {
    "name": "hafas-rest-api – Expose a HAFAS endpoint as a REST API.",
    "url": "https://github.com/public-transport/hafas-rest-api"
  },
  {
    "name": "GraphHopper Routing Engine Open source routing engine for OpenStreetMap. Use it as Java library or server.",
    "url": "https://github.com/graphhopper/graphhopper/#public-transit"
  },
  {
    "name": "Remix",
    "url": "http://getremix.com/",
    "description": "A webapp that lets transit agencies easily plan routes."
  },
  {
    "name": "AC Transit RestroomFinder",
    "url": "https://github.com/actransitorg/ACTransit.RestroomFinder",
    "description": "Pinpoints the nearest authorized restroom for bus operator and field staff, using GPS and on-screen map."
  },
  {
    "name": "AC Transit Training and Education Department (TED) application",
    "url": "https://github.com/actransitorg/ACTransit.Training",
    "description": "This application supports the District's training operations for transportation and maintenance employees, primarily in the positions of Bus Operators and Heavy Duty Coach Mechanics (Apprentice and Journey), although the system supports new courses and apprenticeship programs."
  },
  {
    "name": "AC Transit Customer Relations application (CusRel)",
    "url": "https://github.com/actransitorg/ACTransit.CusRel",
    "description": "Public transit ticketing system for customer issues and feedback with: inter-departmental routing with notifications, department/person assigments, simple workflow, ticket searching, pre-canned reports, daily reminders and more."
  },
  {
    "name": "TransAM",
    "url": "http://camsys.software/products/transam",
    "description": "An open-source asset management platform for public transportation agencies.  Open-source on Github."
  },
  {
    "name": "RidePilot",
    "url": "https://github.com/camsys/ridepilot",
    "description": "An open-source Computer Aided Scheduling and Dispatch (CASD) software system to meet the needs of small scale human service transportation agencies (for more info see Cambridge Systematics's marketing site)."
  },
  {
    "name": "TNExT",
    "url": "https://github.com/ODOT-PTS/TNExT",
    "description": "Transit Network Explorer Tool (TNExT) is a web-based software tool developed for the visualization, analysis, and reporting of regional and statewide transit networks in the state of Oregon."
  },
  {
    "name": "Route Trends (webapp, GitHub)",
    "url": "https://metrotransitmn.shinyapps.io/route-trends/",
    "description": "An R Shiny app to ingest ridership time series, and return seasonal, trend, and residual components according to STL methodology and forecasts including uncertainty based on those components.  Sponsored by Metro Transit (Minneapolis-St. Paul)."
  },
  {
    "name": "TBEST",
    "url": "https://tbest.org/",
    "description": "TBEST (Transit Boardings Estimation and Simulation Tool) is an effort to develop a multi-faceted GIS-based modeling, planning and analysis tool which integrates socio-economic, land use, and transit network data into a platform for scenario-based transit ridership estimation and analysis. Funded by the Florida Department of Transportation. Free to use but not open-source."
  },
  {
    "name": "Bus Tracking GPS",
    "url": "https://github.com/herrdragon/busTrackingGps",
    "description": "Code for Miami prototype of a cheap open-source solution to track transit buses."
  },
  {
    "name": "Instabus",
    "url": "http://instabus.org",
    "description": "Realtime map of Austin's (CapMetro) public transit. Has no server/backend dependency at all and runs completely on GitHub pages."
  },
  {
    "name": "OpenTripPlanner Client GWT",
    "url": "https://github.com/mecatran/OpenTripPlanner-client-gwt",
    "description": "A Google Web Toolkit-based web interface for OpenTripPlanner"
  },
  {
    "name": "OpenTripPlanner.js",
    "url": "https://github.com/conveyal/otp.js",
    "description": "A Javascript-based client for OpenTripPlanner (no longer under development)"
  },
  {
    "name": "OTP-UI React Component Library",
    "url": "https://github.com/opentripplanner/otp-ui",
    "description": "React Javascript component library, which can be used to build trip planner webapps. See the Storybook for a demo."
  },
  {
    "name": "GTFS-realtime Alerts Producer Web Application",
    "url": "https://github.com/OneBusAway/onebusaway-service-alerts",
    "description": "A Java-based web application for producing GTFS-realtime Service Alerts."
  },
  {
    "name": "HRT BUS Web app",
    "url": "https://github.com/Code4HR/hrt-bus-api",
    "description": "HRT Bus API publishes real time bus data from Hampton Roads Transit through an application programming interface for developers to make apps from it."
  },
  {
    "name": "Transit-Map",
    "url": "https://github.com/vasile/transit-map",
    "description": "Web app that animates vehicles (markers) on a map using the public transport timetables to interpolate their positions along the routes (polylines)."
  },
  {
    "name": "Transitive.js",
    "url": "https://github.com/conveyal/transitive.js",
    "description": "Creates a customizable web map layer of transit routes using Leaflet or D3."
  },
  {
    "name": "Google I/O Transport Tracker",
    "url": "https://github.com/googlemaps/transport-tracker",
    "description": "Shows shuttle arrival times for Google I/O conference, based on the open-source transport-tracker project.  Note: To implement this yourself, you need a Google Maps APIs Premium Plan license."
  },
  {
    "name": "1-Click",
    "url": "http://camsys.software/products/1-click",
    "description": "A virtual “trip aggregator” that assembles information on a wide variety of available modes: public transit, private, rail, rideshare, carpool, volunteer, paratransit, and walking and biking. Open-source on GitHub."
  },
  {
    "name": "Bustime",
    "url": "https://www.bustime.ru",
    "description": "Public transport real-time monitoring with WebSocket updates. Open-source on GitHub."
  },
  {
    "name": "Transit Tracker",
    "url": "https://transittracker.ca/#/",
    "description": "Realtime vehicle position for Greater Montreal & Toronto, Canada"
  },
  {
    "name": "GTFS Builder",
    "url": "http://nationalrtap.org/Web-Apps/GTFS-Builder",
    "description": "A free web-based application to help you create GTFS files. Maintained by the National Rural Transit Assistance Program (RTAP)."
  },
  {
    "name": "Dede",
    "url": "https://dedriver.org",
    "description": "An independent and universal passenger information system (PIS) mapping realtime movement. A message feed with Vehicle Position entities in the GTFS-Realtime format or the Dede app can be used as data source."
  },
  {
    "name": "MBTA tile-server",
    "url": "https://github.com/mbta/tile-server",
    "description": "Scripts to create a Docker container that encapsulates all the elements necessary to develop map tiles for use on MBTA.com"
  },
  {
    "name": "TransitScreen",
    "url": "http://transitscreen.com/",
    "description": "Custom realtime displays of all local transportation choices"
  },
  {
    "name": "Citylines.co",
    "url": "https://www.citylines.co",
    "description": "A collaborative platform for mapping transit systems, with an emphasis on their historical evolution."
  },
  {
    "name": "Bikeshare Map",
    "url": "http://bikes.oobrien.com/",
    "description": "Status of all worldwide bikeshare stations"
  },
  {
    "name": "Bongo",
    "url": "http://ebongo.org",
    "description": "Real-time Transit Tracking for Iowa City, Coralville and the University of Iowa. Combines three disparate transit systems into one UI."
  },
  {
    "name": "Brand New Subway",
    "url": "http://jpwright.net/subway/",
    "description": "An interactive transportation planning game that lets players alter the NYC subway system to their heart's content."
  },
  {
    "name": "CityMapper Webapp",
    "url": "https://citymapper.com/nyc",
    "description": "Really polished webapp with trip planner and route status for over 30 of cities."
  },
  {
    "name": "YourStop",
    "url": "http://yourstop.info",
    "description": "Mobile friendly web app which consumes GTFS feeds and displays both live and scheduled trips for stops. Launched with MBTA, YRT/Viva and Maryland MTA."
  },
  {
    "name": "DC MetroHero",
    "url": "https://dcmetrohero.com",
    "description": "Realtime vehicle position and arrivals and departure information for the Washington, D.C. region's WMATA Metrorail and Metrobus systems. WebApp, Android, and iOS apps avaliable."
  },
  {
    "name": "OneBusAway Apps",
    "url": "https://play.google.com/store/apps/details?id=com.joulespersecond.seattlebusbot",
    "description": "Android (source code), Fire Phone (source code), iOS  (source code), Windows Phone (source code), Windows 8 (source code), Google Glass GDK (source code), Alexa skill (source code)"
  },
  {
    "name": "OpenTripPlanner Android",
    "url": "https://github.com/CUTR-at-USF/OpenTripPlanner-for-Android/wiki",
    "description": "An Android app for OpenTripPlanner"
  },
  {
    "name": "OpenTripPlanner iOS",
    "url": "https://github.com/opentripplanner/OpenTripPlanner-iOS",
    "description": "An iOS app for OpenTripPlanner"
  },
  {
    "name": "opentripplanner-client-library",
    "url": "https://github.com/CUTR-at-USF/opentripplanner-client-library",
    "description": "A Kotlin Multiplatform library for making API requests and parsing responses from an OpenTripPlanner v2 server for trip plans, bike rental info, and server metadata for Android, iOS, and web."
  },
  {
    "name": "Transportr An Android app that uses public-transport-enabler in order to connect to many different transport networks worldwide.",
    "url": "https://github.com/grote/Transportr"
  },
  {
    "name": "Offi Directions",
    "url": "https://gitlab.com/oeffi/oeffi",
    "description": "An Android app that provides trip planning, schedules, live departure times, and disruption information for transport authorities in Europe and beyond."
  },
  {
    "name": "Trufi App A cross-platform Flutter app that uses OpenTripPlanner",
    "url": "https://github.com/trufi-association/trufi-app"
  },
  {
    "name": "Dede App",
    "url": "https://github.com/dancesWithCycles/dede-android",
    "description": "An app making any Android powered phone become an Automatic Vehicle Locating (AVL) device for the Dede passenger information system (PIS)."
  },
  {
    "name": "ally",
    "url": "http://www.allyapp.com/"
  },
  {
    "name": "Transit",
    "url": "http://transitapp.com/"
  },
  {
    "name": "CityMapper",
    "url": "https://citymapper.com/"
  },
  {
    "name": "Moovit",
    "url": "http://moovitapp.com/"
  },
  {
    "name": "Tiramisu Transit",
    "url": "http://www.tiramisutransit.com/"
  },
  {
    "name": "TransLoc Rider",
    "url": "http://translocrider.com/",
    "description": "Real-time transit maps for over 100 transit systems."
  },
  {
    "name": "Transit Display",
    "url": "http://transitdisplay.com/",
    "description": "Multimodal and real-time transit display software."
  },
  {
    "name": "Ualabee",
    "url": "https://ualabee.com/company/",
    "description": "Community driven trip planner with focus on user interaction, users can report anomalies, upload pictures, edit transit data and chat with other passengers."
  },
  {
    "name": "Visualizing MBTA Data",
    "url": "http://mbtaviz.github.io/",
    "description": "Interactive graphs that show how people use Boston's subway system."
  },
  {
    "name": "MIT COAXS",
    "url": "http://mittransportanalyst.github.io/",
    "description": "Co-creative Planning of Transit Corridors using Accessibility-Based Stakeholder Engagement (shows route scenarios using OpenTripPlanner Analyst)."
  },
  {
    "name": "TRAVIC Transit Visualization Client",
    "url": "http://tracker.geops.ch/",
    "description": "Visualizes vehicles moving based on static GTFS data (and sometimes realtime data). Supports over 260 cities.  Github account for geOps organization is here."
  },
  {
    "name": "MTA Frequency",
    "url": "http://www.tyleragreen.com/maps/new_york/",
    "description": "Frequency visualization of subways and buses in New York City built using Transitland."
  },
  {
    "name": "Traze by Veridict",
    "url": "https://traze.app/",
    "description": "Visualization of public transport vehicles from all over the world. Collaborate with other users to get real-time updates even when it is not available from the agency. Based on a number of sources, including GTFS and GTFS-RT. (Previously known as Livemap24)."
  },
  {
    "name": "SEPTA Rail OTP Report",
    "url": "https://apps.phor.net/septa/",
    "description": "An online on-time performance reporing & drill down tool using GTFS."
  },
  {
    "name": "TransitFlow Animate GTFS data around the world using Processing and Transitland.",
    "url": "https://github.com/transitland/transitland-processing-animation"
  },
  {
    "name": "All Transit",
    "url": "https://all-transit.com",
    "description": "Interactive GTFS route and schedule animation (for U.S. cities) using Mapbox GL JS, Deck.gl and Transitland. Github repository here."
  },
  {
    "name": "gtfspy-webviz",
    "url": "https://github.com/CxAalto/gtfspy-webviz",
    "description": "Web application for animation and visualization of GTFS data using gtfspy."
  },
  {
    "name": "Mapnificent",
    "url": "https://www.mapnificent.net/",
    "description": "Shows areas you can reach with public transport in a given time. Open-source on GitHub, live at https://www.mapnificent.net/."
  },
  {
    "name": "Toronto Transit Explorer",
    "url": "https://github.com/sidewalklabs/totx",
    "description": "A Java application that visualizes transit, biking and walking accessibility across the city of Toronto. Live version hosted here. Uses a modified version of R5 for routing."
  },
  {
    "name": "fastest-bus-analysis-in-the-west",
    "url": "https://github.com/vta/fastest-bus-analysis-in-the-west",
    "description": "A python Pandas script that combines Ridership/APC, Swiftly speed and dwell data, bus stop inventory, GTFS, and geospatial shapes to create a stop by stop, route by route, time grouping filterable dataset for cross-analyses.  The dataset is then visualized in Tableau to help VTA Planners find places to make bus and rail network faster and more reliable through speedups methods like stop consolidation and dedicated lanes."
  },
  {
    "name": "TNExT",
    "url": "https://github.com/ODOT-PTS/TNExT",
    "description": "Transit Network Explorer Tool (TNExT) is a web-based software tool developed for the visualization, analysis, and reporting of regional and statewide transit networks in the state of Oregon."
  },
  {
    "name": "GTFS Spec",
    "url": "https://developers.google.com/transit/gtfs/",
    "description": "Specification for the General Transit Data Feed, or GTFS. Also available in Español, Français."
  },
  {
    "name": "GTFS Best Practices",
    "url": "http://gtfs.org/best-practices/",
    "description": "Best practices for producers of a GTFS feed."
  },
  {
    "name": "CGTFS",
    "url": "https://github.com/rakhack/cgtfs",
    "description": "C library for reading static GTFS feeds. Supports reading unpacked feeds into application memory or into SQLite databases."
  },
  {
    "name": "RRRR Rapid Real-time Routing",
    "url": "https://github.com/bliksemlabs/rrrr",
    "description": "RRRR (usually pronounced R4) is a C-language implementation of the RAPTOR public transit routing algorithm."
  },
  {
    "name": "just_gtfs",
    "url": "https://github.com/mapsme/just_gtfs",
    "description": "C++17 header-only library for reading and writing GTFS (used in MAPS.ME). Main features: fast reading and writing of GTFS feeds, support for extended GTFS route types, simple working with GTFS Date and Time formats."
  },
  {
    "name": "ESRI public-transit-tools",
    "url": "https://github.com/Esri/public-transit-tools",
    "description": "Tools for working with public transit data in ArcGIS (license for ArcGIS required)."
  },
  {
    "name": "GTFS Feed Parser",
    "url": "https://github.com/OsmSharp/GTFS",
    "description": ".Net/Mono implementation of a GTFS parser."
  },
  {
    "name": "Go GTFS Parser",
    "url": "https://github.com/geops/gtfsparser",
    "description": "A GTFS parsing library for Go."
  },
  {
    "name": "GTFS to SQL",
    "url": "https://github.com/OpenMobilityData/GtfsToSql",
    "description": "Parses a GTFS feed into an SQL database (used in OpenMobilityData)."
  },
  {
    "name": "OneBusAway GTFS Modules",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-modules/wiki",
    "description": "A Java-based library for reading, writing, and transforming public transit data in the GTFS format, including database support."
  },
  {
    "name": "R5: Rapid Realistic Routing on Real-world and Reimagined networks",
    "url": "https://github.com/conveyal/r5",
    "description": "A Java-based routing engine for multimodal (transit/bike/walk/car) networks. It currently plans many trips over a time window for analytics purposes, but may eventually support point-to-point journey planning."
  },
  {
    "name": "SQL to GTFS",
    "url": "https://github.com/OpenMobilityData/SqlToGtfs",
    "description": "Convert an SQLite file generated with \"GtfsToSql\" back to a zipped GTFS file."
  },
  {
    "name": "gtfs-sequelize",
    "url": "https://github.com/evansiroky/gtfs-sequelize",
    "description": "Node.js library modeling the static GTFS using sequelize.js."
  },
  {
    "name": "gtfs-utils – Utilities to process GTFS data sets (e.g., \"flattening\" calendar.txt & calendar_dates.txt, computing arrival/departure times of trips).",
    "url": "https://github.com/public-transport/gtfs-utils"
  },
  {
    "name": "gtfs-via-postgres – Yet another tool to process GTFS using PostgreSQL.",
    "url": "https://github.com/derhuerst/gtfs-via-postgres"
  },
  {
    "name": "Node-GTFS",
    "url": "https://github.com/BlinkTagInc/node-gtfs",
    "description": "Loads transit data from GTFS files, unzips it and stores it to a SQLite database. Provides some methods to query for agencies, routes, stops and times."
  },
  {
    "name": "gtfs-schema",
    "url": "https://github.com/tyleragreen/gtfs-schema",
    "description": "PostgreSQL schema for GTFS feeds."
  },
  {
    "name": "gtfs-via-postgres – Yet another tool to process GTFS using PostgreSQL.",
    "url": "https://github.com/derhuerst/gtfs-via-postgres"
  },
  {
    "name": "ESRI public-transit-tools",
    "url": "https://github.com/Esri/public-transit-tools",
    "description": "Tools for working with public transit data in ArcGIS (license for ArcGIS required)."
  },
  {
    "name": "gtfsdb",
    "url": "https://github.com/OpenTransitTools/gtfsdb",
    "description": "Python library for converting GTFS files into a relational database."
  },
  {
    "name": "gtfslib-python",
    "url": "https://github.com/afimb/gtfslib-python",
    "description": " An open source library in python for reading GTFS files and computing various stats and indicators about Public Transport networks."
  },
  {
    "name": "gtfsman",
    "url": "https://github.com/geops/gtfsman",
    "description": "Repository-like tool in Python to manage and update a huge number of GTFS feeds."
  },
  {
    "name": "gtfspy",
    "url": "https://github.com/CxAalto/gtfspy",
    "description": "Public transport network analysis and travel time computations using Python3. Compatible with Postgres/PostGIS, Oracle, MySQL, and SQLite. Used by gtfspy-webviz."
  },
  {
    "name": "GTFS Kit",
    "url": "https://github.com/mrcagney/gtfs_kit",
    "description": "A Python 3.6+ tool kit for analyzing General Transit Feed Specification (GTFS) data. Supersedes GTFSTK."
  },
  {
    "name": "GTFSTK",
    "url": "https://github.com/araichev/gtfstk",
    "description": "A Python 3 toolkit for analyzing GTFS data in memory. Uses Pandas and Shapely for speed. Superseded by GTFS Kit."
  },
  {
    "name": "Make GTFS",
    "url": "https://github.com/mrcagney/make_gtfs",
    "description": "A Python library to make GTFS feeds from basic route information."
  },
  {
    "name": "Mapzen GTFS",
    "url": "https://github.com/transitland/mapzen-gtfs",
    "description": "A Python GTFS library that supports reading individual GTFS tables, or constructing a graph to represent each agency in a feed."
  },
  {
    "name": "multigtfs",
    "url": "https://github.com/tulsawebdevs/django-multi-gtfs",
    "description": "A Django application to import and export GTFS."
  },
  {
    "name": "partridge",
    "url": "https://github.com/remix/partridge",
    "description": "A fast, forgiving Python GTFS reader built on pandas DataFrames."
  },
  {
    "name": "trread",
    "url": "https://github.com/r-gtfs/trread",
    "description": "A transit (GTFS) file reader for R."
  },
  {
    "name": "GTFS-viz",
    "url": "https://github.com/vasile/GTFS-viz",
    "description": "Ruby script that converts a set of GTFS files into a SQLite database + GeoJSONs (needed by the Transit Map web application)"
  },
  {
    "name": "Chouette",
    "url": "http://www.chouette.mobi/",
    "description": "Converts French-Transmodel, SIRI, NETeX. See Chouette.mobi website for more info."
  },
  {
    "name": "extract-gtfs-pathways – Command-line tool to extract pathways as GeoJSON from a GTFS dataset.",
    "url": "https://github.com/derhuerst/extract-gtfs-pathways"
  },
  {
    "name": "extract-gtfs-shapes – Command-line tool to extract shapes as GeoJSON from a GTFS dataset.",
    "url": "https://github.com/derhuerst/extract-gtfs-shapes"
  },
  {
    "name": "GTFS-OSM-Sync",
    "url": "https://github.com/CUTR-at-USF/gtfs-osm-sync",
    "description": "A Java tool for synchronizing data in GTFS format with OpenStreetMap.org."
  },
  {
    "name": "gtfs-service-area",
    "url": "https://github.com/cal-itp/gtfs-service-area",
    "description": "Compute a transit service area from static GTFS. Results are output as single-layer .geojson files. Dockerized version of gtfs-to-geojson."
  },
  {
    "name": "gtfs-to-geojson",
    "url": "https://github.com/BlinkTagInc/gtfs-to-geojson",
    "description": "Javascript tool that converts transit data in GTFS shapes and stops into geoJSON. This is useful for creating maps of transit routes."
  },
  {
    "name": "gtsf",
    "url": "https://github.com/r-gtfs/gtsf",
    "description": "general transit (GTFS) simple (geographic) features (sf) in R. can be used to convert from GTFS to Shapefile, GeoJSON, and other formats through GDAL."
  },
  {
    "name": "hafas-generate-gtfs (work-in-progress)] – A Javascript tool to generate GTFS dumps from HAFAS endpoints.",
    "url": "https://github.com/derhuerst/hafas-generate-gtfs"
  },
  {
    "name": "Hafas2GTFS",
    "url": "https://github.com/geops/hafas2gtfs",
    "description": "Hafas2GTFS converter written in Python, optimized for SBB HAFAS feeds."
  },
  {
    "name": "kml-to-gtfs-shapes",
    "url": "https://github.com/bdferris/kml-to-gtfs-shapes/tree/gh-pages",
    "description": "Javascript tool to convert polylines from a KML file into a GTFS shapes.txt file. Hosted on GitHub here."
  },
  {
    "name": "o2g",
    "url": "https://github.com/hiposfer/o2g",
    "description": "A simple tool to extract GTFS feed from OpenStreetMap."
  },
  {
    "name": "Open-Transport SYNTHESE Convertors",
    "url": "https://github.com/Open-Transport/synthese/wiki",
    "description": "Converts French-Transmodel, SIRI, NETeX, HAFAS, HASTUS, VDV452, and more."
  },
  {
    "name": "onebusaway-gtfs-to-barefoot",
    "url": "https://github.com/OneBusAway/onebusaway-gtfs-to-barefoot",
    "description": "A Java tool to create a Barefoot mapfile from a GTFS file."
  },
  {
    "name": "onebusaway-vdv-modules",
    "url": "https://github.com/OneBusAway/onebusaway-vdv-modules",
    "description": "A Java library for working with transit data in the VDV format, including converting VDV-452 schedule data into GTFS."
  },
  {
    "name": "osm2gtfs",
    "url": "https://github.com/grote/osm2gtfs",
    "description": "Turn OpenStreetMap data and schedule information into GTFS."
  },
  {
    "name": "transit_model",
    "url": "https://github.com/CanalTP/transit_model",
    "description": "A Rust library to convert to/from the following formats: GTFS, NTFS (for Navitia, see Software for Creating APIs), TransXChange (UK standard format), KV1 (Netherland standard format) or NeTEx (European standard format)."
  },
  {
    "name": "transloc-gtfs-rectifier",
    "url": "https://github.com/laidig/transloc-gtfs-rectifier",
    "description": "Python application that attempts to assign GTFS stop_ids to TransLoc IDs using TransLoc's API (TransLoc doesn't provide GTFS stop_ids in their API)."
  },
  {
    "name": "Transmodel and IFF to GTFS",
    "url": "https://github.com/bliksemlabs/bliksemintegration",
    "description": "Imports and syncs (Transmodel) BISON Koppelvlak1, IFF (a format written by HP/EDS, somewhat similiar to ATCO CIF) to import timetables of the railway networks. The internal pseudo-NETeX datastructure allows to export to GTFS and there are proof-of-concepts to export to other formats such as NETeX, GTFS and IFF."
  },
  {
    "name": "bus-router",
    "url": "https://github.com/atlregional/bus-router",
    "description": "Python script that generates missing shapes.txt for GTFS using routing from Google Maps Directions API or OSRM."
  },
  {
    "name": "GTFS Editor A (self-hosted) web-based GTFS editing framework. (Note: this project has been deprecated in favor of IBI Data Tools.)",
    "url": "https://github.com/conveyal/gtfs-editor"
  },
  {
    "name": "GTFS Editor for Vagrant Quickly set up the GTFS editor (above) using Vagrant",
    "url": "https://github.com/laidig/vagrant-gtfs-editor"
  },
  {
    "name": "static-GTFS-manager",
    "url": "https://github.com/WRI-Cities/static-GTFS-manager",
    "description": "A (self-hosted) browser-based user interface for creating, editing, exporting static GTFS (see related post).  Live demo here."
  },
  {
    "name": "TransitWand",
    "url": "http://transitwand.com/",
    "description": "An open source web and mobile application for collecting transit data. Use it to create GTFS feeds, capture passenger counts or generate GIS datasets."
  },
  {
    "name": "IBI Data Tools",
    "url": "https://github.com/ibi-group/datatools-ui",
    "description": "A web application that handles GTFS editing, validating, quality checking, and deploying to OpenTripPlanner. (Combines and builds upon the functionality of the deprecated Gtfs Data Manager and GTFS Editor.)"
  },
  {
    "name": "GTFS.html",
    "url": "https://gtfs.pleasantprogrammer.com",
    "description": "An entirely browser-based tool to view GTFS feeds. Use it to view routes, stops, timetables, etc."
  },
  {
    "name": "pfaedle",
    "url": "https://github.com/ad-freiburg/pfaedle",
    "description": "Precise map-matching for GTFS using OpenStreetMap data"
  },
  {
    "name": "GTFS shape mapfit",
    "url": "https://github.com/HSLdevcom/gtfs_shape_mapfit",
    "description": "Python tool that fits GTFS shape files and stops to a given OSM map file. Uses pymapmatch for the matching."
  },
  {
    "name": "GTFS Builder",
    "url": "http://nationalrtap.org/Web-Apps/GTFS-Builder",
    "description": "A free web-based application to help you create GTFS files. Maintained by the National Rural Transit Assistance Program (RTAP)."
  },
  {
    "name": "gtfs-station-builder",
    "url": "https://github.com/kostjerry/gtfs-station-builder",
    "description": "UI tool to help build the internal structure of stations (including pathways.txt)"
  },
  {
    "name": "Peartree",
    "url": "https://github.com/kuanb/peartree",
    "description": "A Python library for converting transit data into a directed graph for network analysis."
  },
  {
    "name": "gtfsr",
    "url": "https://github.com/ropensci/gtfsr",
    "description": "An R package for easily importing, validating, and mapping transit data that follows the General Transit Feed Specification (GTFS) format."
  },
  {
    "name": "tidytransit (formerly bustt)",
    "url": "https://github.com/r-transit/tidytransit",
    "description": "Reads GTFS data into tidyverse and simple features dataframes to map transit stops and routes, calculate transit frequencies, and validate transit feeds.  tidytransit is a fork of gtfsr, published to CRAN, with frequency/headway calculation functions."
  },
  {
    "name": "transitr",
    "url": "https://github.com/tmelliott/transitr",
    "description": "An R package for constructing and modelling a transit network in real time to obtain vehicle ETAs"
  },
  {
    "name": "Busbuzzard",
    "url": "https://github.com/bmander/busbuzzard",
    "description": "Inference of probabilistic schedules from empirical data about transit vehicles."
  },
  {
    "name": "ESRI ArcGIS Public Transit Tools (GTFS)",
    "url": "https://github.com/Esri/public-transit-tools",
    "description": "Tools for working with public transit data in ArcGIS"
  },
  {
    "name": "GTFS to HTML",
    "url": "https://github.com/BlinkTagInc/gtfs-to-html",
    "description": "A creates human-readable, user-friendly transit timetables in HTML format directly from GTFS transit data."
  },
  {
    "name": "TimeTablePublisher (TTPUB)",
    "url": "https://github.com/OpenTransitTools/ttpub",
    "description": "A web publishing system developed by TriMet that allows a transit agency to examine, modify, and transform raw scheduling data into easy-to-read timetables for customer information purposes"
  },
  {
    "name": "Conveyal's gtfs-validator",
    "url": "https://github.com/conveyal/gtfs-validator",
    "description": "A Java-based GTFS validator based on the OneBusAway GTFS Modules, runs in Java and is faster than the Google provided one."
  },
  {
    "name": "Conveyal's gtfs-lib",
    "url": "https://github.com/conveyal/gtfs-lib/",
    "description": "Conveyal's successor to their own gtfs-validator, a Java-based library for loading and saving GTFS feeds of arbitrary size with disk-backed storage."
  },
  {
    "name": "Google's feedValidator",
    "url": "https://github.com/google/transitfeed/wiki/FeedValidator",
    "description": "Google-supported Python-based GTFS validator."
  },
  {
    "name": "GTFS Data Package Specification",
    "url": "https://github.com/Stephen-Gates/GTFS",
    "description": "A Data Package specification with validation accomplished with Good Tables. Includes a data package, schemas, tests, and uses South East Queensland GTFS data as an example."
  },
  {
    "name": "GTFS Meta-Validator (hosted by Omni)",
    "url": "http://gtfsvalidator.omnimodal.io",
    "description": "A web-based GTFS validator that runs both the Google Python feedValidator and Conveyal's gtfs-validator on uploaded GTFS files."
  },
  {
    "name": "gtfs-validator-api",
    "url": "https://github.com/cal-itp/gtfs-validator-api",
    "description": "This Python package is a thin wrapper around MobilityData/gtfs-validator that handles intermediate files produced and finds gtfs-validator's output file so it can be given a specific name or returned as a string."
  },
  {
    "name": "GTFSVTOR",
    "url": "https://github.com/mecatran/gtfsvtor",
    "description": "An open-source GTFS validator implemented in Java licensed under GPLv3 maintained by Mecatran."
  },
  {
    "name": "MobilityData's gtfs-validator",
    "url": "https://github.com/MobilityData/gtfs-validator",
    "description": "A open-source GTFS validator canonically following the GTFS spec implemented in Java licensed under Apache v2.0 maintained by MobilityData."
  },
  {
    "name": "Reflect GTFS Validator (hosted by Foursquare ITP)",
    "url": "https://reflect.foursquareitp.com",
    "description": "Transit schedule and GTFS validation platform by Foursquare ITP that includes a free, "
  }
]
