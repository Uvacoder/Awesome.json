[
  {
    "name": "Slack Chat",
    "url": "https://wpgql-slack.herokuapp.com/"
  },
  {
    "name": "Spectrum Chat",
    "url": "https://spectrum.chat/wpgraphql"
  },
  {
    "name": "Twitter",
    "url": "https://twitter.com/wpgraphql"
  },
  {
    "name": "Discord Chat",
    "url": "https://gatsby.dev/discord"
  },
  {
    "name": "Reddit",
    "url": "https://www.reddit.com/r/gatsbyjs/"
  },
  {
    "name": "Stack Overflow",
    "url": "https://stackoverflow.com/questions/tagged/gatsby"
  },
  {
    "name": "2019.06: Modern Web Development on the JAMstack\n",
    "url": "https://www.netlify.com/oreilly-jamstack/",
    "description": "A report from Netlify about Modern Web Development on the JAMStack, published by O'REILLY."
  },
  {
    "name": "WPGraphQL",
    "url": "https://github.com/wp-graphql/wp-graphql",
    "description": "Documentation - WPGraphQL brings the power of GraphQL to your WordPress site."
  },
  {
    "name": "WPGraphQL for Advanced Custom Fields",
    "url": "https://github.com/wp-graphql/wp-graphql-acf",
    "description": "Exposes Advanced Custom Fields to the WPGraphQL Schema."
  },
  {
    "name": "WPGraphQL Polylang Extension",
    "url": "https://github.com/valu-digital/wp-graphql-polylang",
    "description": "Extends WPGraphQL schema with language data from the Polylang plugin."
  },
  {
    "name": "WPGraphQL Gutenberg",
    "url": "https://github.com/pristas-peter/wp-graphql-gutenberg",
    "description": "Exposes Gutenberg blocks to the WPGraphQL API."
  },
  {
    "name": "WPGraphQL Gutenberg ACF",
    "url": "https://github.com/pristas-peter/wp-graphql-gutenberg-acf",
    "description": "Exposes ACF blocks through GraphQL"
  },
  {
    "name": "WPGraphQL Meta Query",
    "url": "https://github.com/wp-graphql/wp-graphql-meta-query",
    "description": "Adds Meta_Query support to the WPGraphQL Plugin for postObject query args."
  },
  {
    "name": "WPGraphQL Tax Query",
    "url": "https://github.com/wp-graphql/wp-graphql-tax-query",
    "description": "Adds Tax_Query support to the WPGraphQL Plugin for postObject query args (WP_Query)."
  },
  {
    "name": "WPGraphQL JWT Authentication",
    "url": "https://github.com/wp-graphql/wp-graphql-jwt-authentication",
    "description": "Extends the WPGraphQL plugin to provide authentication using JWT (JSON Web Tokens)."
  },
  {
    "name": "WPGraphQL Lock",
    "url": "https://github.com/valu-digital/wp-graphql-lock",
    "description": "Enables query locking for WPGraphQL by implementing persisted GraphQL queries."
  },
  {
    "name": "QL Search",
    "url": "https://github.com/funkhaus/ql-search",
    "description": "An extension that integrates SearchWP into WPGraphQL."
  },
  {
    "name": "WPGraphQl Yoast SEO Plugin",
    "url": "https://github.com/ashhitch/wp-graphql-yoast-seo",
    "description": "Exposes Yoast SEO data to the WPGraphQL Plugin."
  },
  {
    "name": "WPGraphiQL",
    "url": "https://github.com/wp-graphql/wp-graphiql",
    "description": "Extends the WordPress dashboard with a GraphiQL IDE."
  },
  {
    "name": "WP API Menus",
    "url": "https://wordpress.org/plugins/wp-api-menus/",
    "description": "Extends the WordPress JSON REST API with new routes for WordPress registered menus."
  },
  {
    "name": "WP JAMstack Deployments",
    "url": "https://github.com/crgeary/wp-jamstack-deployments",
    "description": "WordPress plugin for JAMstack deployments on Netlify (and other platforms)."
  },
  {
    "name": "Headless Mode",
    "url": "https://wordpress.org/plugins/headless-mode/",
    "description": "Headless mode sets up a redirect for all users trying to access the site. The only requests that are granted admission are ones that are either trying to access the REST API, the WP GraphQL API, or any logged-in user looking to access the headless install to edit or create posts."
  },
  {
    "name": "Advanced Custom Fields",
    "url": "https://wordpress.org/plugins/advanced-custom-fields/",
    "description": "ACF PRO"
  },
  {
    "name": "Polylang",
    "url": "https://wordpress.org/plugins/polylang/"
  },
  {
    "name": "gatsby-source-graphql",
    "url": "https://www.gatsbyjs.org/packages/gatsby-source-graphql"
  },
  {
    "name": "gatsby-image",
    "url": "https://www.gatsbyjs.org/packages/gatsby-image"
  },
  {
    "name": "gatsby-source-filesystem",
    "url": "https://www.gatsbyjs.org/packages/gatsby-source-filesystem"
  },
  {
    "name": "gatsby-source-wordpress",
    "url": "https://www.gatsbyjs.org/packages/gatsby-source-wordpress"
  },
  {
    "name": "2018.08: Headless WordPress + Gatsby + Netlify continuous deployment",
    "url": "https://justinwhall.com/headless-wordpress-gatsby-netlify-continous-deployment/",
    "description": "Guide showing how to create a WordPress + Gatsby + Netlify setup in a few simple steps."
  },
  {
    "name": "2019.11: Guide to Gatsby WordPress Starter Advanced with Previews, i18n and more",
    "url": "https://dev.to/nevernull/overview-guide-to-gatsby-wordpress-starter-advanced-with-previews-i18n-and-more-583l",
    "description": "A tutorial series starting with the basic setup of WordPress and Gatsby with WPGraphQL and then dives into more advanced subjects like deployments, previews, i18n and a page-builder like setup with ACF flexible cotent fields."
  },
  {
    "name": "2019.08: Live Previews with WordPress and Gatsby",
    "url": "https://justinwhall.com/live-previews-with-wordpress-gatsby/",
    "description": "Tutorial showing how to use the theme’s higher order component to facilitate previews for WordPress posts and custom post types."
  },
  {
    "name": "2019.08: Gatsby with WPGraphQL, ACF and Gatbsy-Image",
    "url": "https://dev.to/nevernull/gatsby-with-wpgraphql-acf-and-gatbsy-image-72m",
    "description": "A guide, that shows how to implement gatsby-image, so it can be used for WordPress media files."
  },
  {
    "name": "2019.09: Sourcing from WordPress",
    "url": "https://www.gatsbyjs.org/docs/sourcing-from-wordpress/",
    "description": "This guide will walk you through the process of using Gatsby with WordPress Rest Api."
  },
  {
    "name": "2019.07: Complete guide to WordPress menu sourcing in Gatsby",
    "url": "https://dev.to/boussama/complete-guide-to-wordpress-menu-sourcing-in-gatsby-h76",
    "description": "This guide explains how to get the WordPress menu into your Gatsby build."
  },
  {
    "name": "2019.04: How To Build A Blog with WordPress and Gatsby.js",
    "url": "https://dev.to/iam_timsmith/how-to-build-a-blog-with-wordpress-and-gatsby-js-part-1-4f9e",
    "description": "Tutorial (3 Parts) teaching you how to build a blog with WordPress and Gatsby."
  },
  {
    "name": "2018.10: Build a blog with React, WordPress using Gatsby",
    "url": "https://medium.com/@mjadav/build-a-blog-with-react-wordpress-using-gatsby-4cdfb6ce2004",
    "description": "Tutorial teaching how to create a blog in 10 steps using Gatsby and WordPress as data source."
  },
  {
    "name": "2019.11: 30+ Videos",
    "url": "https://whatjackhasmade.co.uk/gatsby-wordpress-2019/",
    "description": "Gatsby + WordPress (2019) Complete Course - The series focuses on how we can use WordPress as a headless CMS with a GraphQL schema to interface with. After setting up our WordPress site and theme, we'll move onto Gatsby and how we can use our new schema to generate content for our Gatsby site, programmatically generating pages, converting Gutenberg blocks to React components and finishing off the chapter with a focus on SEO in Gatsby."
  },
  {
    "name": "2019.07: Gatsby + WordPress with WPGraphQL (with Jason Bahl) — Learn With Jason",
    "url": "https://www.youtube.com/watch?v=DH7I1xRrbxs",
    "description": "In this stream, Jason Bahl teaches how to use WordPress with Advanced Custom Fields and WPGraphQL to create an powerful, flexible admin dashboard, then query and display that data in a Gatsby site."
  },
  {
    "name": "2019.07: Crash Course: Headless WordPress with WPGraphQL, ACF, and React",
    "url": "https://www.youtube.com/watch?v=9KGuI0UmpMw",
    "description": "In this video, Alex Young (WPCasts) goes over how to get a simple headless WordPress setup with WPGraphQL and React."
  },
  {
    "name": "2019.06: Using WordPress with WPGraphQL",
    "url": "https://www.youtube.com/watch?v=aqEfEuVWqws",
    "description": "In this video you will learn how to use GraphQL with WordPress using an awesome plugin named WPGraphQL and some extra cool stuff like GraphQL + Advanced Custom Fields."
  },
  {
    "name": "2019.04: WPGraphQL for ACF",
    "url": "https://www.youtube.com/watch?v=rIg4MHc8elg",
    "description": "Jason Bahl shows how to use WPGraphQL for Advanced Custom Fields."
  },
  {
    "name": "2018.07: GraphQL with WordPress and Gutenberg",
    "url": "https://www.youtube.com/watch?v=6CuM1PY9ESQ",
    "description": "Jason Bahl - 2018 JavaScript for WordPress Conference"
  },
  {
    "name": "2018.03: Gatsby.js + WordPress",
    "url": "https://www.youtube.com/watch?v=etii9yp1J6s",
    "description": "In this mini-series the developer tries to create a website using Gatsby.js and WordPress."
  },
  {
    "name": "Gatsby + WPGraphQL Blog Example",
    "url": "https://github.com/wp-graphql/gatsby-wpgraphql-blog-example",
    "description": "Demo showing how to use WPGraphQL as the source for Gatsby Sites."
  },
  {
    "name": "Gatsby + Headless WordPress + Netlify Starter",
    "url": "https://github.com/justinwhall/gatsby-wordpress-netlify-starter",
    "description": "A Gatsby + WordPress starter for continuous deployment to Netlify."
  },
  {
    "name": "Gatsby WordPress Starter Advanced",
    "url": "https://github.com/henrikwirth/gatsby-starter-wordpress-advanced",
    "description": "An advanced Gatsby + WordPress starter, that is built along a tutorial series and works with ACF flexible content fields to create content blocks/layouts."
  },
  {
    "name": "Twenty Nineteen Gatsby Theme",
    "url": "https://github.com/zgordon/twentynineteen-gatsby-theme",
    "description": "A port of the Twenty Nineteen WordPress Theme over to Gatsby."
  },
  {
    "name": "Gatsby WordPress Publisher Theme\n",
    "url": "https://github.com/staticfuse/gatsby-theme-publisher",
    "description": "The Gatsby Publisher Theme allows you to create a headless (or decoupled) WordPress site. This theme will display all of your pages and posts in a static front-end built on React and Gatsby."
  }
]
